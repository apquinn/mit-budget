{"ast":null,"code":"var _jsxFileName = \"/Users/aquinn/Desktop/MIT Assignments/mit-budget/my-app/src/Reports.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport HeaderLinks from \"./HeaderLinks.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Header() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeaderLinks, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = Header;\nfunction BarGraphMonthsBar({\n  className,\n  amount,\n  highest\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    style: {\n      height: amount / highest * 300 + \"px\"\n    },\n    children: amount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c2 = BarGraphMonthsBar;\nfunction BarGraphMonths({\n  data,\n  highest\n}) {\n  let itemDate = \"\";\n  let e = document.getElementById(\"dateSelectFrom\");\n  let textFrom = e.options[e.selectedIndex].text;\n  textFrom = Date.parse(textFrom);\n  e = document.getElementById(\"dateSelectTo\");\n  let textTo = e.options[e.selectedIndex].text;\n  textTo = Date.parse(textTo);\n  return data.map((item, index) => {\n    itemDate = Date.parse(item.date);\n    if (itemDate >= textFrom && itemDate <= textTo) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper-individual\",\n        children: [/*#__PURE__*/_jsxDEV(BarGraphMonthsBar, {\n          className: \"actual\",\n          amount: item.current,\n          highest: highest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BarGraphMonthsBar, {\n          className: \"budget\",\n          amount: item.budget,\n          highest: highest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-month\",\n          children: format(Date.parse(item.date), \"M/yyyy\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    }\n  });\n}\n_c3 = BarGraphMonths;\nfunction IndividualBarGraphTotal({\n  amount,\n  highestTotal,\n  className\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      style: {\n        width: amount / highestTotal * 500 + \"px\"\n      },\n      children: amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c4 = IndividualBarGraphTotal;\nfunction BarGraphTotal({\n  highestTotal,\n  totalCurrent,\n  totalBudget,\n  categoryName\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overall-balance\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"boldfont\",\n        children: categoryName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), \" - overall balance since category inception: $\", totalBudget - totalCurrent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper-total\",\n      children: [/*#__PURE__*/_jsxDEV(IndividualBarGraphTotal, {\n        amount: totalCurrent,\n        highestTotal: highestTotal,\n        className: \"actual-total\",\n        total: totalCurrent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IndividualBarGraphTotal, {\n        amount: totalBudget,\n        highestTotal: highestTotal,\n        className: \"budget-total\",\n        total: totalBudget\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c5 = BarGraphTotal;\nfunction DateRangeDropDownItem({\n  data,\n  id,\n  onChangeHandler\n}) {\n  let currentDateMonth = \"\";\n  let currentDateYear = \"\";\n  let dateToFind = \"\";\n  let label = \"From\";\n  if (id == \"dateSelectFrom\") {\n    currentDateMonth = format(new Date(), \"M\");\n    currentDateYear = String(Number(format(new Date(), \"yyyy\")) - 1);\n    dateToFind = currentDateMonth + \"/1/\" + currentDateYear;\n  } else {\n    currentDateMonth = format(new Date(), \"M\");\n    currentDateYear = format(new Date(), \"yyyy\");\n    dateToFind = currentDateMonth + \"/1/\" + currentDateYear;\n    label = \"To\";\n  }\n  const loadOptions = () => {\n    let result = data.map(item => {\n      if (item.date == dateToFind) return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.date,\n        selected: true,\n        children: item.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this);else return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.date,\n        children: item.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }, this);\n    });\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"date-item-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      className: \"label top-padding\",\n      children: [label, /*#__PURE__*/_jsxDEV(\"select\", {\n        id: id,\n        name: id,\n        className: \"form-control\",\n        onChange: onChangeHandler,\n        children: loadOptions()\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, id + \"-Label\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_c6 = DateRangeDropDownItem;\nfunction DateRangeDropDownCat({\n  data,\n  setDateCat\n}) {\n  _s();\n  let found = false;\n  const onChangeHandler = () => {\n    alert(\"Cat change\");\n  };\n  const [searchParams, setSearchParams] = useSearchParams();\n  const loadOptions = () => {\n    let result = data.map(item => {\n      if (searchParams.get(\"dateCat\") != null && item.category == searchParams.get(\"dateCat\")) {\n        setDateCat(item.category);\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          selected: true,\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 16\n        }, this);\n      }\n    });\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"date-item-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"DateSelectCat\",\n      className: \"label top-padding\",\n      children: [\"Select Group\", /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"DateSelectCat\",\n        name: \"DateSelectCat\",\n        className: \"form-control\",\n        onChange: onChangeHandler,\n        children: loadOptions()\n      }, \"DateSelectCat\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, \"DateSelectCat-Label\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n_s(DateRangeDropDownCat, \"/eCs5CB4FLGAVLeprHBYLwBGf/Q=\", false, function () {\n  return [useSearchParams];\n});\n_c7 = DateRangeDropDownCat;\nfunction DateRangeDropDownDates({\n  dataReport,\n  setDateFrom,\n  setDateTo\n}) {\n  const onChangeHandlerDate = event => {\n    alert(\"Date changed\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DateRangeDropDownItem, {\n      data: dataReport,\n      id: \"dateSelectFrom\",\n      onChangeHandler: onChangeHandlerDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DateRangeDropDownItem, {\n      data: dataReport,\n      id: \"dateSelectTo\",\n      onChangeHandler: onChangeHandlerDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c8 = DateRangeDropDownDates;\nfunction BarGraph({\n  data\n}) {\n  let highest = 0;\n  let highestTotal = 0;\n  let totalCurrent = 0;\n  let totalBudget = 0;\n  let e = document.getElementById(\"dateSelectFrom\");\n  let textFrom = e.options[e.selectedIndex].text;\n  textFrom = Date.parse(textFrom);\n  e = document.getElementById(\"dateSelectTo\");\n  let textTo = e.options[e.selectedIndex].text;\n  textTo = Date.parse(textTo);\n  data.map(item => {\n    if (Date.parse(item.date) >= textFrom && Date.parse(item.date) <= textTo) {\n      if (item.budget > highest) highest = item.budget;\n      if (item.current > highest) highest = item.current;\n    }\n    totalCurrent += item.current;\n    totalBudget += item.budget;\n  });\n  highestTotal = totalCurrent > totalBudget ? totalCurrent : totalBudget;\n  e = document.getElementById(\"dateSelectCat\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BarGraphMonths, {\n      data: data,\n      highest: highest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarGraphTotal, {\n      highestTotal: highestTotal,\n      totalCurrent: totalCurrent,\n      totalBudget: totalBudget,\n      categoryName: e.options[e.selectedIndex].text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c9 = BarGraph;\nexport default function Reports() {\n  _s2();\n  const [data, setData] = useState(null);\n  const [dataCat, setDataCat] = useState();\n  const [dateFrom, setDateFrom] = useState();\n  const [dateTo, setDateTo] = useState();\n  const [dateCat, setDateCat] = useState();\n  let baseURLReport = `http://localhost:3000/dataReport.json?dateCat=\"${dateCat}&dateFrom=\"${dateFrom}&dateTo=\"${dateTo}`;\n  let baseURLCat = \"http://localhost:3000/dataCategories.json\";\n  React.useEffect(() => {\n    axios.get(baseURLReport).then(response => {\n      setData(response.data);\n    });\n    axios.get(baseURLCat).then(response => {\n      setDataCat(response.data);\n    });\n  }, [dateFrom, dateTo, dateCat]);\n  if (!data) return \"error data\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"ReportDatesWrapper\",\n      className: \"report-dates-well left-indent card card-body bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DateRangeDropDownCat, {\n          data: dataCat,\n          setDateCat: setDateCat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DateRangeDropDownDates, {\n          dataReport: data,\n          setDateFrom: setDateFrom,\n          setDateTo: setDateTo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, \"ReportDatesWell\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, \"ReportDatesWrapper\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  //          <BarGraph data={data} />;\n}\n_s2(Reports, \"+rN0kwtIUWgYIkLSwvEqOXPZ3Ec=\");\n_c10 = Reports;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"BarGraphMonthsBar\");\n$RefreshReg$(_c3, \"BarGraphMonths\");\n$RefreshReg$(_c4, \"IndividualBarGraphTotal\");\n$RefreshReg$(_c5, \"BarGraphTotal\");\n$RefreshReg$(_c6, \"DateRangeDropDownItem\");\n$RefreshReg$(_c7, \"DateRangeDropDownCat\");\n$RefreshReg$(_c8, \"DateRangeDropDownDates\");\n$RefreshReg$(_c9, \"BarGraph\");\n$RefreshReg$(_c10, \"Reports\");","map":{"version":3,"names":["useState","useEffect","React","axios","useSearchParams","format","HeaderLinks","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","BarGraphMonthsBar","amount","highest","style","height","_c2","BarGraphMonths","data","itemDate","e","document","getElementById","textFrom","options","selectedIndex","text","Date","parse","textTo","map","item","index","date","current","budget","_c3","IndividualBarGraphTotal","highestTotal","width","_c4","BarGraphTotal","totalCurrent","totalBudget","categoryName","total","_c5","DateRangeDropDownItem","id","onChangeHandler","currentDateMonth","currentDateYear","dateToFind","label","String","Number","loadOptions","result","value","selected","htmlFor","name","onChange","_c6","DateRangeDropDownCat","setDateCat","_s","found","alert","searchParams","setSearchParams","get","category","_c7","DateRangeDropDownDates","dataReport","setDateFrom","setDateTo","onChangeHandlerDate","event","_c8","BarGraph","_c9","Reports","_s2","setData","dataCat","setDataCat","dateFrom","dateTo","dateCat","baseURLReport","baseURLCat","then","response","_c10","$RefreshReg$"],"sources":["/Users/aquinn/Desktop/MIT Assignments/mit-budget/my-app/src/Reports.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport HeaderLinks from \"./HeaderLinks.js\";\n\nfunction Header() {\n  return (\n    <div className=\"header-wrapper\">\n      <h1>Reports</h1>\n      <HeaderLinks />\n    </div>\n  );\n}\n\nfunction BarGraphMonthsBar({ className, amount, highest }) {\n  return (\n    <div\n      className={className}\n      style={{ height: (amount / highest) * 300 + \"px\" }}\n    >\n      {amount}\n    </div>\n  );\n}\n\nfunction BarGraphMonths({ data, highest }) {\n  let itemDate = \"\";\n  let e = document.getElementById(\"dateSelectFrom\");\n  let textFrom = e.options[e.selectedIndex].text;\n  textFrom = Date.parse(textFrom);\n\n  e = document.getElementById(\"dateSelectTo\");\n  let textTo = e.options[e.selectedIndex].text;\n  textTo = Date.parse(textTo);\n\n  return data.map((item, index) => {\n    itemDate = Date.parse(item.date);\n    if (itemDate >= textFrom && itemDate <= textTo) {\n      return (\n        <div className=\"wrapper-individual\">\n          <BarGraphMonthsBar\n            className=\"actual\"\n            amount={item.current}\n            highest={highest}\n          />\n\n          <BarGraphMonthsBar\n            className=\"budget\"\n            amount={item.budget}\n            highest={highest}\n          />\n          <div className=\"date-month\">\n            {format(Date.parse(item.date), \"M/yyyy\")}\n          </div>\n        </div>\n      );\n    }\n  });\n}\n\nfunction IndividualBarGraphTotal({ amount, highestTotal, className }) {\n  return (\n    <>\n      <div\n        className={className}\n        style={{ width: (amount / highestTotal) * 500 + \"px\" }}\n      >\n        {amount}\n      </div>\n    </>\n  );\n}\n\nfunction BarGraphTotal({\n  highestTotal,\n  totalCurrent,\n  totalBudget,\n  categoryName,\n}) {\n  return (\n    <>\n      <div className=\"overall-balance\">\n        <span className=\"boldfont\">{categoryName}</span> - overall balance since\n        category inception: ${totalBudget - totalCurrent}\n      </div>\n      <div className=\"wrapper-total\">\n        <IndividualBarGraphTotal\n          amount={totalCurrent}\n          highestTotal={highestTotal}\n          className=\"actual-total\"\n          total={totalCurrent}\n        />\n\n        <IndividualBarGraphTotal\n          amount={totalBudget}\n          highestTotal={highestTotal}\n          className=\"budget-total\"\n          total={totalBudget}\n        />\n      </div>\n    </>\n  );\n}\n\nfunction DateRangeDropDownItem({ data, id, onChangeHandler }) {\n  let currentDateMonth = \"\";\n  let currentDateYear = \"\";\n  let dateToFind = \"\";\n  let label = \"From\";\n\n  if (id == \"dateSelectFrom\") {\n    currentDateMonth = format(new Date(), \"M\");\n    currentDateYear = String(Number(format(new Date(), \"yyyy\")) - 1);\n    dateToFind = currentDateMonth + \"/1/\" + currentDateYear;\n  } else {\n    currentDateMonth = format(new Date(), \"M\");\n    currentDateYear = format(new Date(), \"yyyy\");\n    dateToFind = currentDateMonth + \"/1/\" + currentDateYear;\n    label = \"To\";\n  }\n\n  const loadOptions = () => {\n    let result = data.map((item) => {\n      if (item.date == dateToFind)\n        return (\n          <option value={item.date} selected>\n            {item.date}\n          </option>\n        );\n      else return <option value={item.date}>{item.date}</option>;\n    });\n    return result;\n  };\n\n  return (\n    <div className=\"date-item-wrapper\">\n      <label key={id + \"-Label\"} htmlFor={id} className=\"label top-padding\">\n        {label}\n        <select\n          id={id}\n          name={id}\n          key={id}\n          className=\"form-control\"\n          onChange={onChangeHandler}\n        >\n          {loadOptions()}\n        </select>\n      </label>\n    </div>\n  );\n}\n\nfunction DateRangeDropDownCat({ data, setDateCat }) {\n  let found = false;\n  const onChangeHandler = () => {\n    alert(\"Cat change\");\n  };\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const loadOptions = () => {\n    let result = data.map((item) => {\n      if (\n        searchParams.get(\"dateCat\") != null &&\n        item.category == searchParams.get(\"dateCat\")\n      ) {\n        setDateCat(item.category);\n        return (\n          <option value={item.id} selected>\n            {item.category}\n          </option>\n        );\n      } else {\n        return <option value={item.id}>{item.category}</option>;\n      }\n    });\n    return result;\n  };\n\n  return (\n    <div className=\"date-item-wrapper\">\n      <label\n        key=\"DateSelectCat-Label\"\n        htmlFor=\"DateSelectCat\"\n        className=\"label top-padding\"\n      >\n        Select Group\n        <select\n          id=\"DateSelectCat\"\n          name=\"DateSelectCat\"\n          key=\"DateSelectCat\"\n          className=\"form-control\"\n          onChange={onChangeHandler}\n        >\n          {loadOptions()}\n        </select>\n      </label>\n    </div>\n  );\n}\n\nfunction DateRangeDropDownDates({ dataReport, setDateFrom, setDateTo }) {\n  const onChangeHandlerDate = (event) => {\n    alert(\"Date changed\");\n  };\n\n  return (\n    <>\n      <DateRangeDropDownItem\n        data={dataReport}\n        id=\"dateSelectFrom\"\n        onChangeHandler={onChangeHandlerDate}\n      />\n      <DateRangeDropDownItem\n        data={dataReport}\n        id=\"dateSelectTo\"\n        onChangeHandler={onChangeHandlerDate}\n      />\n    </>\n  );\n}\n\nfunction BarGraph({ data }) {\n  let highest = 0;\n  let highestTotal = 0;\n  let totalCurrent = 0;\n  let totalBudget = 0;\n\n  let e = document.getElementById(\"dateSelectFrom\");\n  let textFrom = e.options[e.selectedIndex].text;\n  textFrom = Date.parse(textFrom);\n\n  e = document.getElementById(\"dateSelectTo\");\n  let textTo = e.options[e.selectedIndex].text;\n  textTo = Date.parse(textTo);\n\n  data.map((item) => {\n    if (Date.parse(item.date) >= textFrom && Date.parse(item.date) <= textTo) {\n      if (item.budget > highest) highest = item.budget;\n      if (item.current > highest) highest = item.current;\n    }\n    totalCurrent += item.current;\n    totalBudget += item.budget;\n  });\n\n  highestTotal = totalCurrent > totalBudget ? totalCurrent : totalBudget;\n  e = document.getElementById(\"dateSelectCat\");\n\n  return (\n    <>\n      <BarGraphMonths data={data} highest={highest} />\n      <BarGraphTotal\n        highestTotal={highestTotal}\n        totalCurrent={totalCurrent}\n        totalBudget={totalBudget}\n        categoryName={e.options[e.selectedIndex].text}\n      />\n    </>\n  );\n}\n\nexport default function Reports() {\n  const [data, setData] = useState(null);\n  const [dataCat, setDataCat] = useState();\n\n  const [dateFrom, setDateFrom] = useState();\n  const [dateTo, setDateTo] = useState();\n  const [dateCat, setDateCat] = useState();\n\n  let baseURLReport = `http://localhost:3000/dataReport.json?dateCat=\"${dateCat}&dateFrom=\"${dateFrom}&dateTo=\"${dateTo}`;\n\n  let baseURLCat = \"http://localhost:3000/dataCategories.json\";\n  React.useEffect(() => {\n    axios.get(baseURLReport).then((response) => {\n      setData(response.data);\n    });\n    axios.get(baseURLCat).then((response) => {\n      setDataCat(response.data);\n    });\n  }, [dateFrom, dateTo, dateCat]);\n  if (!data) return \"error data\";\n\n  return (\n    <>\n      <Header />\n      <div\n        id=\"ReportDatesWrapper\"\n        key=\"ReportDatesWrapper\"\n        className=\"report-dates-well left-indent card card-body bg-light\"\n      >\n        <div key=\"ReportDatesWell\">\n          <DateRangeDropDownCat data={dataCat} setDateCat={setDateCat} />\n          <DateRangeDropDownDates\n            dataReport={data}\n            setDateFrom={setDateFrom}\n            setDateTo={setDateTo}\n          />\n        </div>\n      </div>\n    </>\n  );\n  //          <BarGraph data={data} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}