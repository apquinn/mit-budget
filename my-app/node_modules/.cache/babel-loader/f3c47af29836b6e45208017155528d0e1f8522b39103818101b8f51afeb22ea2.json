{"ast":null,"code":"var _jsxFileName = \"/Users/aquinn/Desktop/MIT Assignments/mit-budget/my-app/src/Reports.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport HeaderLinks from \"./HeaderLinks.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Header() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeaderLinks, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = Header;\nfunction DateRangeDropDownCat({\n  data,\n  setDateCat\n}) {\n  _s();\n  let found = false;\n  const onChangeHandler = event => {\n    let e = document.getElementById(event.target.id);\n    setDateCat(e.options[e.selectedIndex].text);\n    alert(\"Cat change: \" + e.options[e.selectedIndex].text);\n  };\n  const [searchParams, setSearchParams] = useSearchParams();\n  const loadOptions = () => {\n    let result = data.map(item => {\n      if (searchParams.get(\"dateCat\") != null && item.category == searchParams.get(\"dateCat\")) {\n        setDateCat(item.category);\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          selected: true,\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, this);\n      }\n    });\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"date-item-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"DateSelectCat\",\n      className: \"label top-padding\",\n      children: [\"Select Group\", /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"DateSelectCat\",\n        name: \"DateSelectCat\",\n        className: \"form-control\",\n        onChange: onChangeHandler,\n        children: loadOptions()\n      }, \"DateSelectCat\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, \"DateSelectCat-Label\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(DateRangeDropDownCat, \"/eCs5CB4FLGAVLeprHBYLwBGf/Q=\", false, function () {\n  return [useSearchParams];\n});\n_c2 = DateRangeDropDownCat;\nfunction DateRangeDropDownDates({\n  dataReport,\n  setDateFrom,\n  setDateTo\n}) {\n  const onChangeHandlerDate = event => {\n    let e = document.getElementById(event.target.id);\n    if (event.target.id == \"dateSelectFrom\") setDateFrom(e.options[e.selectedIndex].text);else setDateTo(e.options[e.selectedIndex].text);\n    alert(\"Date change: \" + e.options[e.selectedIndex].text);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DateRangeDropDownItem, {\n      data: dataReport,\n      id: \"dateSelectFrom\",\n      setDate: setDateFrom,\n      onChangeHandler: onChangeHandlerDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DateRangeDropDownItem, {\n      data: dataReport,\n      id: \"dateSelectTo\",\n      setDate: setDateTo,\n      onChangeHandler: onChangeHandlerDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c3 = DateRangeDropDownDates;\nfunction BarGraphMonthsBar({\n  className,\n  amount,\n  highest\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    style: {\n      height: amount / highest * 300 + \"px\"\n    },\n    children: amount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_c4 = BarGraphMonthsBar;\nfunction BarGraphMonths({\n  data,\n  highest\n}) {\n  let itemDate = \"\";\n  let e = document.getElementById(\"dateSelectFrom\");\n  let textFrom = e.options[e.selectedIndex].text;\n  textFrom = Date.parse(textFrom);\n  e = document.getElementById(\"dateSelectTo\");\n  let textTo = e.options[e.selectedIndex].text;\n  textTo = Date.parse(textTo);\n  return data.map((item, index) => {\n    itemDate = Date.parse(item.date);\n    if (itemDate >= textFrom && itemDate <= textTo) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper-individual\",\n        children: [/*#__PURE__*/_jsxDEV(BarGraphMonthsBar, {\n          className: \"actual\",\n          amount: item.current,\n          highest: highest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BarGraphMonthsBar, {\n          className: \"budget\",\n          amount: item.budget,\n          highest: highest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-month\",\n          children: format(Date.parse(item.date), \"M/yyyy\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this);\n    }\n  });\n}\n_c5 = BarGraphMonths;\nfunction IndividualBarGraphTotal({\n  amount,\n  highestTotal,\n  className\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      style: {\n        width: amount / highestTotal * 500 + \"px\"\n      },\n      children: amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c6 = IndividualBarGraphTotal;\nfunction BarGraphTotal({\n  highestTotal,\n  totalCurrent,\n  totalBudget,\n  categoryName\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overall-balance\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"boldfont\",\n        children: categoryName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), \" - overall balance since category inception: $\", totalBudget - totalCurrent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper-total\",\n      children: [/*#__PURE__*/_jsxDEV(IndividualBarGraphTotal, {\n        amount: totalCurrent,\n        highestTotal: highestTotal,\n        className: \"actual-total\",\n        total: totalCurrent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IndividualBarGraphTotal, {\n        amount: totalBudget,\n        highestTotal: highestTotal,\n        className: \"budget-total\",\n        total: totalBudget\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c7 = BarGraphTotal;\nfunction DateRangeDropDownItem({\n  data,\n  id,\n  setDate,\n  onChangeHandler\n}) {\n  let currentDateMonth = \"\";\n  let currentDateYear = \"\";\n  let dateToFind = \"\";\n  let label = \"From\";\n  if (id == \"dateSelectFrom\") {\n    currentDateMonth = format(new Date(), \"M\");\n    currentDateYear = String(Number(format(new Date(), \"yyyy\")) - 1);\n    dateToFind = currentDateMonth + \"/1/\" + currentDateYear;\n  } else {\n    currentDateMonth = format(new Date(), \"M\");\n    currentDateYear = format(new Date(), \"yyyy\");\n    dateToFind = currentDateMonth + \"/1/\" + currentDateYear;\n    label = \"To\";\n  }\n  setDate(dateToFind);\n  const loadOptions = () => {\n    let result = data.map(item => {\n      if (item.date == dateToFind) return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.date,\n        selected: true,\n        children: item.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this);else return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.date,\n        children: item.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 19\n      }, this);\n    });\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"date-item-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      className: \"label top-padding\",\n      children: [label, /*#__PURE__*/_jsxDEV(\"select\", {\n        id: id,\n        name: id,\n        className: \"form-control\",\n        onChange: onChangeHandler,\n        children: loadOptions()\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, id + \"-Label\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n}\n_c8 = DateRangeDropDownItem;\nfunction BarGraph({\n  data,\n  dateCat,\n  dateFrom,\n  dateTo\n}) {\n  let highest = 0;\n  let highestTotal = 0;\n  let totalCurrent = 0;\n  let totalBudget = 0;\n  let textFrom = Date.parse(dateFrom);\n  let textTo = Date.parse(dateTo);\n  data.map(item => {\n    if (Date.parse(item.date) >= textFrom && Date.parse(item.date) <= textTo) {\n      if (item.budget > highest) highest = item.budget;\n      if (item.current > highest) highest = item.current;\n    }\n    totalCurrent += item.current;\n    totalBudget += item.budget;\n  });\n  highestTotal = totalCurrent > totalBudget ? totalCurrent : totalBudget;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BarGraphMonths, {\n      data: data,\n      highest: highest,\n      dateFrom: dateFrom,\n      dateTo: dateTo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarGraphTotal, {\n      highestTotal: highestTotal,\n      totalCurrent: totalCurrent,\n      totalBudget: totalBudget,\n      categoryName: dateCat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c9 = BarGraph;\nexport default function Reports() {\n  _s2();\n  const [data, setData] = useState(null);\n  const [dataCat, setDataCat] = useState();\n  const [dateFrom, setDateFrom] = useState();\n  const [dateTo, setDateTo] = useState();\n  const [dateCat, setDateCat] = useState();\n  let baseURLReport = `http://localhost:3000/dataReport.json?dateCat=\"${dateCat}&dateFrom=\"${dateFrom}&dateTo=\"${dateTo}`;\n  let baseURLCat = \"http://localhost:3000/dataCategories.json\";\n  React.useEffect(() => {\n    axios.get(baseURLReport).then(response => {\n      setData(response.data);\n    });\n    axios.get(baseURLCat).then(response => {\n      setDataCat(response.data);\n    });\n  }, [dateFrom, dateTo, dateCat]);\n  if (!data) return \"error data\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"ReportDatesWrapper\",\n      className: \"report-dates-well left-indent card card-body bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DateRangeDropDownCat, {\n          data: dataCat,\n          setDateCat: setDateCat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DateRangeDropDownDates, {\n          dataReport: data,\n          setDateFrom: setDateFrom,\n          setDateTo: setDateTo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, \"ReportDatesWell\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)\n    }, \"ReportDatesWrapper\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarGraph, {\n      data: data,\n      dateCat: dateCat,\n      dateFrom: dateFrom,\n      dateTo: dateTo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true);\n}\n_s2(Reports, \"+rN0kwtIUWgYIkLSwvEqOXPZ3Ec=\");\n_c10 = Reports;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"DateRangeDropDownCat\");\n$RefreshReg$(_c3, \"DateRangeDropDownDates\");\n$RefreshReg$(_c4, \"BarGraphMonthsBar\");\n$RefreshReg$(_c5, \"BarGraphMonths\");\n$RefreshReg$(_c6, \"IndividualBarGraphTotal\");\n$RefreshReg$(_c7, \"BarGraphTotal\");\n$RefreshReg$(_c8, \"DateRangeDropDownItem\");\n$RefreshReg$(_c9, \"BarGraph\");\n$RefreshReg$(_c10, \"Reports\");","map":{"version":3,"names":["useState","useEffect","React","axios","useSearchParams","format","HeaderLinks","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","DateRangeDropDownCat","data","setDateCat","_s","found","onChangeHandler","event","e","document","getElementById","target","id","options","selectedIndex","text","alert","searchParams","setSearchParams","loadOptions","result","map","item","get","category","value","selected","htmlFor","name","onChange","_c2","DateRangeDropDownDates","dataReport","setDateFrom","setDateTo","onChangeHandlerDate","DateRangeDropDownItem","setDate","_c3","BarGraphMonthsBar","amount","highest","style","height","_c4","BarGraphMonths","itemDate","textFrom","Date","parse","textTo","index","date","current","budget","_c5","IndividualBarGraphTotal","highestTotal","width","_c6","BarGraphTotal","totalCurrent","totalBudget","categoryName","total","_c7","currentDateMonth","currentDateYear","dateToFind","label","String","Number","_c8","BarGraph","dateCat","dateFrom","dateTo","_c9","Reports","_s2","setData","dataCat","setDataCat","baseURLReport","baseURLCat","then","response","_c10","$RefreshReg$"],"sources":["/Users/aquinn/Desktop/MIT Assignments/mit-budget/my-app/src/Reports.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport HeaderLinks from \"./HeaderLinks.js\";\n\nfunction Header() {\n  return (\n    <div className=\"header-wrapper\">\n      <h1>Reports</h1>\n      <HeaderLinks />\n    </div>\n  );\n}\n\nfunction DateRangeDropDownCat({ data, setDateCat }) {\n  let found = false;\n  const onChangeHandler = (event) => {\n    let e = document.getElementById(event.target.id);\n    setDateCat(e.options[e.selectedIndex].text);\n    alert(\"Cat change: \" + e.options[e.selectedIndex].text);\n  };\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const loadOptions = () => {\n    let result = data.map((item) => {\n      if (\n        searchParams.get(\"dateCat\") != null &&\n        item.category == searchParams.get(\"dateCat\")\n      ) {\n        setDateCat(item.category);\n        return (\n          <option value={item.id} selected>\n            {item.category}\n          </option>\n        );\n      } else {\n        return <option value={item.id}>{item.category}</option>;\n      }\n    });\n    return result;\n  };\n\n  return (\n    <div className=\"date-item-wrapper\">\n      <label\n        key=\"DateSelectCat-Label\"\n        htmlFor=\"DateSelectCat\"\n        className=\"label top-padding\"\n      >\n        Select Group\n        <select\n          id=\"DateSelectCat\"\n          name=\"DateSelectCat\"\n          key=\"DateSelectCat\"\n          className=\"form-control\"\n          onChange={onChangeHandler}\n        >\n          {loadOptions()}\n        </select>\n      </label>\n    </div>\n  );\n}\n\nfunction DateRangeDropDownDates({ dataReport, setDateFrom, setDateTo }) {\n  const onChangeHandlerDate = (event) => {\n    let e = document.getElementById(event.target.id);\n    if (event.target.id == \"dateSelectFrom\")\n      setDateFrom(e.options[e.selectedIndex].text);\n    else setDateTo(e.options[e.selectedIndex].text);\n    alert(\"Date change: \" + e.options[e.selectedIndex].text);\n  };\n\n  return (\n    <>\n      <DateRangeDropDownItem\n        data={dataReport}\n        id=\"dateSelectFrom\"\n        setDate={setDateFrom}\n        onChangeHandler={onChangeHandlerDate}\n      />\n      <DateRangeDropDownItem\n        data={dataReport}\n        id=\"dateSelectTo\"\n        setDate={setDateTo}\n        onChangeHandler={onChangeHandlerDate}\n      />\n    </>\n  );\n}\n\nfunction BarGraphMonthsBar({ className, amount, highest }) {\n  return (\n    <div\n      className={className}\n      style={{ height: (amount / highest) * 300 + \"px\" }}\n    >\n      {amount}\n    </div>\n  );\n}\n\nfunction BarGraphMonths({ data, highest }) {\n  let itemDate = \"\";\n  let e = document.getElementById(\"dateSelectFrom\");\n  let textFrom = e.options[e.selectedIndex].text;\n  textFrom = Date.parse(textFrom);\n\n  e = document.getElementById(\"dateSelectTo\");\n  let textTo = e.options[e.selectedIndex].text;\n  textTo = Date.parse(textTo);\n\n  return data.map((item, index) => {\n    itemDate = Date.parse(item.date);\n    if (itemDate >= textFrom && itemDate <= textTo) {\n      return (\n        <div className=\"wrapper-individual\">\n          <BarGraphMonthsBar\n            className=\"actual\"\n            amount={item.current}\n            highest={highest}\n          />\n\n          <BarGraphMonthsBar\n            className=\"budget\"\n            amount={item.budget}\n            highest={highest}\n          />\n          <div className=\"date-month\">\n            {format(Date.parse(item.date), \"M/yyyy\")}\n          </div>\n        </div>\n      );\n    }\n  });\n}\n\nfunction IndividualBarGraphTotal({ amount, highestTotal, className }) {\n  return (\n    <>\n      <div\n        className={className}\n        style={{ width: (amount / highestTotal) * 500 + \"px\" }}\n      >\n        {amount}\n      </div>\n    </>\n  );\n}\n\nfunction BarGraphTotal({\n  highestTotal,\n  totalCurrent,\n  totalBudget,\n  categoryName,\n}) {\n  return (\n    <>\n      <div className=\"overall-balance\">\n        <span className=\"boldfont\">{categoryName}</span> - overall balance since\n        category inception: ${totalBudget - totalCurrent}\n      </div>\n      <div className=\"wrapper-total\">\n        <IndividualBarGraphTotal\n          amount={totalCurrent}\n          highestTotal={highestTotal}\n          className=\"actual-total\"\n          total={totalCurrent}\n        />\n\n        <IndividualBarGraphTotal\n          amount={totalBudget}\n          highestTotal={highestTotal}\n          className=\"budget-total\"\n          total={totalBudget}\n        />\n      </div>\n    </>\n  );\n}\n\nfunction DateRangeDropDownItem({ data, id, setDate, onChangeHandler }) {\n  let currentDateMonth = \"\";\n  let currentDateYear = \"\";\n  let dateToFind = \"\";\n  let label = \"From\";\n\n  if (id == \"dateSelectFrom\") {\n    currentDateMonth = format(new Date(), \"M\");\n    currentDateYear = String(Number(format(new Date(), \"yyyy\")) - 1);\n    dateToFind = currentDateMonth + \"/1/\" + currentDateYear;\n  } else {\n    currentDateMonth = format(new Date(), \"M\");\n    currentDateYear = format(new Date(), \"yyyy\");\n    dateToFind = currentDateMonth + \"/1/\" + currentDateYear;\n    label = \"To\";\n  }\n  setDate(dateToFind);\n\n  const loadOptions = () => {\n    let result = data.map((item) => {\n      if (item.date == dateToFind)\n        return (\n          <option value={item.date} selected>\n            {item.date}\n          </option>\n        );\n      else return <option value={item.date}>{item.date}</option>;\n    });\n    return result;\n  };\n\n  return (\n    <div className=\"date-item-wrapper\">\n      <label key={id + \"-Label\"} htmlFor={id} className=\"label top-padding\">\n        {label}\n        <select\n          id={id}\n          name={id}\n          key={id}\n          className=\"form-control\"\n          onChange={onChangeHandler}\n        >\n          {loadOptions()}\n        </select>\n      </label>\n    </div>\n  );\n}\n\nfunction BarGraph({ data, dateCat, dateFrom, dateTo }) {\n  let highest = 0;\n  let highestTotal = 0;\n  let totalCurrent = 0;\n  let totalBudget = 0;\n\n  let textFrom = Date.parse(dateFrom);\n  let textTo = Date.parse(dateTo);\n\n  data.map((item) => {\n    if (Date.parse(item.date) >= textFrom && Date.parse(item.date) <= textTo) {\n      if (item.budget > highest) highest = item.budget;\n      if (item.current > highest) highest = item.current;\n    }\n    totalCurrent += item.current;\n    totalBudget += item.budget;\n  });\n\n  highestTotal = totalCurrent > totalBudget ? totalCurrent : totalBudget;\n\n  return (\n    <>\n      <BarGraphMonths\n        data={data}\n        highest={highest}\n        dateFrom={dateFrom}\n        dateTo={dateTo}\n      />\n      <BarGraphTotal\n        highestTotal={highestTotal}\n        totalCurrent={totalCurrent}\n        totalBudget={totalBudget}\n        categoryName={dateCat}\n      />\n    </>\n  );\n}\n\nexport default function Reports() {\n  const [data, setData] = useState(null);\n  const [dataCat, setDataCat] = useState();\n\n  const [dateFrom, setDateFrom] = useState();\n  const [dateTo, setDateTo] = useState();\n  const [dateCat, setDateCat] = useState();\n\n  let baseURLReport = `http://localhost:3000/dataReport.json?dateCat=\"${dateCat}&dateFrom=\"${dateFrom}&dateTo=\"${dateTo}`;\n\n  let baseURLCat = \"http://localhost:3000/dataCategories.json\";\n  React.useEffect(() => {\n    axios.get(baseURLReport).then((response) => {\n      setData(response.data);\n    });\n    axios.get(baseURLCat).then((response) => {\n      setDataCat(response.data);\n    });\n  }, [dateFrom, dateTo, dateCat]);\n  if (!data) return \"error data\";\n\n  return (\n    <>\n      <Header />\n      <div\n        id=\"ReportDatesWrapper\"\n        key=\"ReportDatesWrapper\"\n        className=\"report-dates-well left-indent card card-body bg-light\"\n      >\n        <div key=\"ReportDatesWell\">\n          <DateRangeDropDownCat data={dataCat} setDateCat={setDateCat} />\n          <DateRangeDropDownDates\n            dataReport={data}\n            setDateFrom={setDateFrom}\n            setDateTo={setDateTo}\n          />\n        </div>\n      </div>\n      <BarGraph\n        data={data}\n        dateCat={dateCat}\n        dateFrom={dateFrom}\n        dateTo={dateTo}\n      />\n      ;\n    </>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAOC,WAAW,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,SAASC,MAAMA,CAAA,EAAG;EAChB,oBACEH,OAAA;IAAKI,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BL,OAAA;MAAAK,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBT,OAAA,CAACF,WAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAACC,EAAA,GAPQP,MAAM;AASf,SAASQ,oBAAoBA,CAAC;EAAEC,IAAI;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAClD,IAAIC,KAAK,GAAG,KAAK;EACjB,MAAMC,eAAe,GAAIC,KAAK,IAAK;IACjC,IAAIC,CAAC,GAAGC,QAAQ,CAACC,cAAc,CAACH,KAAK,CAACI,MAAM,CAACC,EAAE,CAAC;IAChDT,UAAU,CAACK,CAAC,CAACK,OAAO,CAACL,CAAC,CAACM,aAAa,CAAC,CAACC,IAAI,CAAC;IAC3CC,KAAK,CAAC,cAAc,GAAGR,CAAC,CAACK,OAAO,CAACL,CAAC,CAACM,aAAa,CAAC,CAACC,IAAI,CAAC;EACzD,CAAC;EAED,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGhC,eAAe,CAAC,CAAC;EAEzD,MAAMiC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIC,MAAM,GAAGlB,IAAI,CAACmB,GAAG,CAAEC,IAAI,IAAK;MAC9B,IACEL,YAAY,CAACM,GAAG,CAAC,SAAS,CAAC,IAAI,IAAI,IACnCD,IAAI,CAACE,QAAQ,IAAIP,YAAY,CAACM,GAAG,CAAC,SAAS,CAAC,EAC5C;QACApB,UAAU,CAACmB,IAAI,CAACE,QAAQ,CAAC;QACzB,oBACElC,OAAA;UAAQmC,KAAK,EAAEH,IAAI,CAACV,EAAG;UAACc,QAAQ;UAAA/B,QAAA,EAC7B2B,IAAI,CAACE;QAAQ;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAEb,CAAC,MAAM;QACL,oBAAOT,OAAA;UAAQmC,KAAK,EAAEH,IAAI,CAACV,EAAG;UAAAjB,QAAA,EAAE2B,IAAI,CAACE;QAAQ;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MACzD;IACF,CAAC,CAAC;IACF,OAAOqB,MAAM;EACf,CAAC;EAED,oBACE9B,OAAA;IAAKI,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChCL,OAAA;MAEEqC,OAAO,EAAC,eAAe;MACvBjC,SAAS,EAAC,mBAAmB;MAAAC,QAAA,GAC9B,cAEC,eAAAL,OAAA;QACEsB,EAAE,EAAC,eAAe;QAClBgB,IAAI,EAAC,eAAe;QAEpBlC,SAAS,EAAC,cAAc;QACxBmC,QAAQ,EAAEvB,eAAgB;QAAAX,QAAA,EAEzBwB,WAAW,CAAC;MAAC,GAJV,eAAe;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CAAC;IAAA,GAbL,qBAAqB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACK,EAAA,CAjDQH,oBAAoB;EAAA,QAQaf,eAAe;AAAA;AAAA4C,GAAA,GARhD7B,oBAAoB;AAmD7B,SAAS8B,sBAAsBA,CAAC;EAAEC,UAAU;EAAEC,WAAW;EAAEC;AAAU,CAAC,EAAE;EACtE,MAAMC,mBAAmB,GAAI5B,KAAK,IAAK;IACrC,IAAIC,CAAC,GAAGC,QAAQ,CAACC,cAAc,CAACH,KAAK,CAACI,MAAM,CAACC,EAAE,CAAC;IAChD,IAAIL,KAAK,CAACI,MAAM,CAACC,EAAE,IAAI,gBAAgB,EACrCqB,WAAW,CAACzB,CAAC,CAACK,OAAO,CAACL,CAAC,CAACM,aAAa,CAAC,CAACC,IAAI,CAAC,CAAC,KAC1CmB,SAAS,CAAC1B,CAAC,CAACK,OAAO,CAACL,CAAC,CAACM,aAAa,CAAC,CAACC,IAAI,CAAC;IAC/CC,KAAK,CAAC,eAAe,GAAGR,CAAC,CAACK,OAAO,CAACL,CAAC,CAACM,aAAa,CAAC,CAACC,IAAI,CAAC;EAC1D,CAAC;EAED,oBACEzB,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBACEL,OAAA,CAAC8C,qBAAqB;MACpBlC,IAAI,EAAE8B,UAAW;MACjBpB,EAAE,EAAC,gBAAgB;MACnByB,OAAO,EAAEJ,WAAY;MACrB3B,eAAe,EAAE6B;IAAoB;MAAAvC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACFT,OAAA,CAAC8C,qBAAqB;MACpBlC,IAAI,EAAE8B,UAAW;MACjBpB,EAAE,EAAC,cAAc;MACjByB,OAAO,EAAEH,SAAU;MACnB5B,eAAe,EAAE6B;IAAoB;MAAAvC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA,eACF,CAAC;AAEP;AAACuC,GAAA,GAzBQP,sBAAsB;AA2B/B,SAASQ,iBAAiBA,CAAC;EAAE7C,SAAS;EAAE8C,MAAM;EAAEC;AAAQ,CAAC,EAAE;EACzD,oBACEnD,OAAA;IACEI,SAAS,EAAEA,SAAU;IACrBgD,KAAK,EAAE;MAAEC,MAAM,EAAGH,MAAM,GAAGC,OAAO,GAAI,GAAG,GAAG;IAAK,CAAE;IAAA9C,QAAA,EAElD6C;EAAM;IAAA5C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC6C,GAAA,GATQL,iBAAiB;AAW1B,SAASM,cAAcA,CAAC;EAAE3C,IAAI;EAAEuC;AAAQ,CAAC,EAAE;EACzC,IAAIK,QAAQ,GAAG,EAAE;EACjB,IAAItC,CAAC,GAAGC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;EACjD,IAAIqC,QAAQ,GAAGvC,CAAC,CAACK,OAAO,CAACL,CAAC,CAACM,aAAa,CAAC,CAACC,IAAI;EAC9CgC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC;EAE/BvC,CAAC,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;EAC3C,IAAIwC,MAAM,GAAG1C,CAAC,CAACK,OAAO,CAACL,CAAC,CAACM,aAAa,CAAC,CAACC,IAAI;EAC5CmC,MAAM,GAAGF,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC;EAE3B,OAAOhD,IAAI,CAACmB,GAAG,CAAC,CAACC,IAAI,EAAE6B,KAAK,KAAK;IAC/BL,QAAQ,GAAGE,IAAI,CAACC,KAAK,CAAC3B,IAAI,CAAC8B,IAAI,CAAC;IAChC,IAAIN,QAAQ,IAAIC,QAAQ,IAAID,QAAQ,IAAII,MAAM,EAAE;MAC9C,oBACE5D,OAAA;QAAKI,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjCL,OAAA,CAACiD,iBAAiB;UAChB7C,SAAS,EAAC,QAAQ;UAClB8C,MAAM,EAAElB,IAAI,CAAC+B,OAAQ;UACrBZ,OAAO,EAAEA;QAAQ;UAAA7C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eAEFT,OAAA,CAACiD,iBAAiB;UAChB7C,SAAS,EAAC,QAAQ;UAClB8C,MAAM,EAAElB,IAAI,CAACgC,MAAO;UACpBb,OAAO,EAAEA;QAAQ;UAAA7C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACFT,OAAA;UAAKI,SAAS,EAAC,YAAY;UAAAC,QAAA,EACxBR,MAAM,CAAC6D,IAAI,CAACC,KAAK,CAAC3B,IAAI,CAAC8B,IAAI,CAAC,EAAE,QAAQ;QAAC;UAAAxD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAEV;EACF,CAAC,CAAC;AACJ;AAACwD,GAAA,GAjCQV,cAAc;AAmCvB,SAASW,uBAAuBA,CAAC;EAAEhB,MAAM;EAAEiB,YAAY;EAAE/D;AAAU,CAAC,EAAE;EACpE,oBACEJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACEL,OAAA;MACEI,SAAS,EAAEA,SAAU;MACrBgD,KAAK,EAAE;QAAEgB,KAAK,EAAGlB,MAAM,GAAGiB,YAAY,GAAI,GAAG,GAAG;MAAK,CAAE;MAAA9D,QAAA,EAEtD6C;IAAM;MAAA5C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC,gBACN,CAAC;AAEP;AAAC4D,GAAA,GAXQH,uBAAuB;AAahC,SAASI,aAAaA,CAAC;EACrBH,YAAY;EACZI,YAAY;EACZC,WAAW;EACXC;AACF,CAAC,EAAE;EACD,oBACEzE,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBACEL,OAAA;MAAKI,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BL,OAAA;QAAMI,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAEoE;MAAY;QAAAnE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,kDAC3B,EAAC+D,WAAW,GAAGD,YAAY;IAAA;MAAAjE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACNT,OAAA;MAAKI,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BL,OAAA,CAACkE,uBAAuB;QACtBhB,MAAM,EAAEqB,YAAa;QACrBJ,YAAY,EAAEA,YAAa;QAC3B/D,SAAS,EAAC,cAAc;QACxBsE,KAAK,EAAEH;MAAa;QAAAjE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eAEFT,OAAA,CAACkE,uBAAuB;QACtBhB,MAAM,EAAEsB,WAAY;QACpBL,YAAY,EAAEA,YAAa;QAC3B/D,SAAS,EAAC,cAAc;QACxBsE,KAAK,EAAEF;MAAY;QAAAlE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP;AAACkE,GAAA,GA7BQL,aAAa;AA+BtB,SAASxB,qBAAqBA,CAAC;EAAElC,IAAI;EAAEU,EAAE;EAAEyB,OAAO;EAAE/B;AAAgB,CAAC,EAAE;EACrE,IAAI4D,gBAAgB,GAAG,EAAE;EACzB,IAAIC,eAAe,GAAG,EAAE;EACxB,IAAIC,UAAU,GAAG,EAAE;EACnB,IAAIC,KAAK,GAAG,MAAM;EAElB,IAAIzD,EAAE,IAAI,gBAAgB,EAAE;IAC1BsD,gBAAgB,GAAG/E,MAAM,CAAC,IAAI6D,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC;IAC1CmB,eAAe,GAAGG,MAAM,CAACC,MAAM,CAACpF,MAAM,CAAC,IAAI6D,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IAChEoB,UAAU,GAAGF,gBAAgB,GAAG,KAAK,GAAGC,eAAe;EACzD,CAAC,MAAM;IACLD,gBAAgB,GAAG/E,MAAM,CAAC,IAAI6D,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC;IAC1CmB,eAAe,GAAGhF,MAAM,CAAC,IAAI6D,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC;IAC5CoB,UAAU,GAAGF,gBAAgB,GAAG,KAAK,GAAGC,eAAe;IACvDE,KAAK,GAAG,IAAI;EACd;EACAhC,OAAO,CAAC+B,UAAU,CAAC;EAEnB,MAAMjD,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIC,MAAM,GAAGlB,IAAI,CAACmB,GAAG,CAAEC,IAAI,IAAK;MAC9B,IAAIA,IAAI,CAAC8B,IAAI,IAAIgB,UAAU,EACzB,oBACE9E,OAAA;QAAQmC,KAAK,EAAEH,IAAI,CAAC8B,IAAK;QAAC1B,QAAQ;QAAA/B,QAAA,EAC/B2B,IAAI,CAAC8B;MAAI;QAAAxD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,CACT,KACC,oBAAOT,OAAA;QAAQmC,KAAK,EAAEH,IAAI,CAAC8B,IAAK;QAAAzD,QAAA,EAAE2B,IAAI,CAAC8B;MAAI;QAAAxD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAC5D,CAAC,CAAC;IACF,OAAOqB,MAAM;EACf,CAAC;EAED,oBACE9B,OAAA;IAAKI,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChCL,OAAA;MAA2BqC,OAAO,EAAEf,EAAG;MAAClB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,GAClE0E,KAAK,eACN/E,OAAA;QACEsB,EAAE,EAAEA,EAAG;QACPgB,IAAI,EAAEhB,EAAG;QAETlB,SAAS,EAAC,cAAc;QACxBmC,QAAQ,EAAEvB,eAAgB;QAAAX,QAAA,EAEzBwB,WAAW,CAAC;MAAC,GAJTP,EAAE;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKD,CAAC;IAAA,GAVCa,EAAE,GAAG,QAAQ;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWlB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACyE,GAAA,GA/CQpC,qBAAqB;AAiD9B,SAASqC,QAAQA,CAAC;EAAEvE,IAAI;EAAEwE,OAAO;EAAEC,QAAQ;EAAEC;AAAO,CAAC,EAAE;EACrD,IAAInC,OAAO,GAAG,CAAC;EACf,IAAIgB,YAAY,GAAG,CAAC;EACpB,IAAII,YAAY,GAAG,CAAC;EACpB,IAAIC,WAAW,GAAG,CAAC;EAEnB,IAAIf,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAAC0B,QAAQ,CAAC;EACnC,IAAIzB,MAAM,GAAGF,IAAI,CAACC,KAAK,CAAC2B,MAAM,CAAC;EAE/B1E,IAAI,CAACmB,GAAG,CAAEC,IAAI,IAAK;IACjB,IAAI0B,IAAI,CAACC,KAAK,CAAC3B,IAAI,CAAC8B,IAAI,CAAC,IAAIL,QAAQ,IAAIC,IAAI,CAACC,KAAK,CAAC3B,IAAI,CAAC8B,IAAI,CAAC,IAAIF,MAAM,EAAE;MACxE,IAAI5B,IAAI,CAACgC,MAAM,GAAGb,OAAO,EAAEA,OAAO,GAAGnB,IAAI,CAACgC,MAAM;MAChD,IAAIhC,IAAI,CAAC+B,OAAO,GAAGZ,OAAO,EAAEA,OAAO,GAAGnB,IAAI,CAAC+B,OAAO;IACpD;IACAQ,YAAY,IAAIvC,IAAI,CAAC+B,OAAO;IAC5BS,WAAW,IAAIxC,IAAI,CAACgC,MAAM;EAC5B,CAAC,CAAC;EAEFG,YAAY,GAAGI,YAAY,GAAGC,WAAW,GAAGD,YAAY,GAAGC,WAAW;EAEtE,oBACExE,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBACEL,OAAA,CAACuD,cAAc;MACb3C,IAAI,EAAEA,IAAK;MACXuC,OAAO,EAAEA,OAAQ;MACjBkC,QAAQ,EAAEA,QAAS;MACnBC,MAAM,EAAEA;IAAO;MAAAhF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACFT,OAAA,CAACsE,aAAa;MACZH,YAAY,EAAEA,YAAa;MAC3BI,YAAY,EAAEA,YAAa;MAC3BC,WAAW,EAAEA,WAAY;MACzBC,YAAY,EAAEW;IAAQ;MAAA9E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA,eACF,CAAC;AAEP;AAAC8E,GAAA,GApCQJ,QAAQ;AAsCjB,eAAe,SAASK,OAAOA,CAAA,EAAG;EAAAC,GAAA;EAChC,MAAM,CAAC7E,IAAI,EAAE8E,OAAO,CAAC,GAAGlG,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACmG,OAAO,EAAEC,UAAU,CAAC,GAAGpG,QAAQ,CAAC,CAAC;EAExC,MAAM,CAAC6F,QAAQ,EAAE1C,WAAW,CAAC,GAAGnD,QAAQ,CAAC,CAAC;EAC1C,MAAM,CAAC8F,MAAM,EAAE1C,SAAS,CAAC,GAAGpD,QAAQ,CAAC,CAAC;EACtC,MAAM,CAAC4F,OAAO,EAAEvE,UAAU,CAAC,GAAGrB,QAAQ,CAAC,CAAC;EAExC,IAAIqG,aAAa,GAAI,kDAAiDT,OAAQ,cAAaC,QAAS,YAAWC,MAAO,EAAC;EAEvH,IAAIQ,UAAU,GAAG,2CAA2C;EAC5DpG,KAAK,CAACD,SAAS,CAAC,MAAM;IACpBE,KAAK,CAACsC,GAAG,CAAC4D,aAAa,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;MAC1CN,OAAO,CAACM,QAAQ,CAACpF,IAAI,CAAC;IACxB,CAAC,CAAC;IACFjB,KAAK,CAACsC,GAAG,CAAC6D,UAAU,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACvCJ,UAAU,CAACI,QAAQ,CAACpF,IAAI,CAAC;IAC3B,CAAC,CAAC;EACJ,CAAC,EAAE,CAACyE,QAAQ,EAAEC,MAAM,EAAEF,OAAO,CAAC,CAAC;EAC/B,IAAI,CAACxE,IAAI,EAAE,OAAO,YAAY;EAE9B,oBACEZ,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBACEL,OAAA,CAACG,MAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVT,OAAA;MACEsB,EAAE,EAAC,oBAAoB;MAEvBlB,SAAS,EAAC,uDAAuD;MAAAC,QAAA,eAEjEL,OAAA;QAAAK,QAAA,gBACEL,OAAA,CAACW,oBAAoB;UAACC,IAAI,EAAE+E,OAAQ;UAAC9E,UAAU,EAAEA;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/DT,OAAA,CAACyC,sBAAsB;UACrBC,UAAU,EAAE9B,IAAK;UACjB+B,WAAW,EAAEA,WAAY;UACzBC,SAAS,EAAEA;QAAU;UAAAtC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC;MAAA,GANK,iBAAiB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOrB;IAAC,GAVF,oBAAoB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWrB,CAAC,eACNT,OAAA,CAACmF,QAAQ;MACPvE,IAAI,EAAEA,IAAK;MACXwE,OAAO,EAAEA,OAAQ;MACjBC,QAAQ,EAAEA,QAAS;MACnBC,MAAM,EAAEA;IAAO;MAAAhF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,KAEJ;EAAA,eAAE,CAAC;AAEP;AAACgF,GAAA,CA/CuBD,OAAO;AAAAS,IAAA,GAAPT,OAAO;AAAA,IAAA9E,EAAA,EAAA8B,GAAA,EAAAQ,GAAA,EAAAM,GAAA,EAAAW,GAAA,EAAAI,GAAA,EAAAM,GAAA,EAAAO,GAAA,EAAAK,GAAA,EAAAU,IAAA;AAAAC,YAAA,CAAAxF,EAAA;AAAAwF,YAAA,CAAA1D,GAAA;AAAA0D,YAAA,CAAAlD,GAAA;AAAAkD,YAAA,CAAA5C,GAAA;AAAA4C,YAAA,CAAAjC,GAAA;AAAAiC,YAAA,CAAA7B,GAAA;AAAA6B,YAAA,CAAAvB,GAAA;AAAAuB,YAAA,CAAAhB,GAAA;AAAAgB,YAAA,CAAAX,GAAA;AAAAW,YAAA,CAAAD,IAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}